# Default values for besu.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: hyperledger/besu
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

### besu ###
private: true
nodePrivateKey: ""

### besu config.toml ###
configFile: /opt/besu/config.toml
config:
  # network
  XdnsEnabled: true
  XdnsUpdateEnabled: true
  bootnodes: []

  # node
  dataPath: /opt/besu/database
  genesisFile: /opt/besu/genesis.json
  nodePrivateKeyFile: /opt/besu/key
  hostAllowlist: ["*"]
  logging: INFO
  minGasPrice: 0

  p2pPort: 30303

  rpcHttpEnabled: true
  rpcHttpHost: 127.0.0.1
  rpcHttpPort: 8545
  rpcHttpApi: ["ETH", "NET", "WEB3", "ADMIN", "CLIQUE", "DEBUG", "EEA", "IBFT", "MINER", "PERM", "PLUGINS", "PRIV", "QBFT", "TRACE", "TXPOOL"]
  rpcHttpCorsOrigins: ["*"]

  rpcWsEnabled: true
  rpcWsHost: 127.0.0.1
  rpcWsPort: 8546
  rpcWsApi: ["ETH", "NET", "WEB3", "ADMIN", "CLIQUE", "DEBUG", "EEA", "IBFT", "MINER", "PERM", "PLUGINS", "PRIV", "QBFT", "TRACE", "TXPOOL"]

  graphqlHttpEnabled: true
  graphqlHttpHost: 127.0.0.1
  graphqlHttpPort: 8547
  graphqlHttpCorsOrigins: ["*"]

### besu genesis.json ###
genesis:
  config:
    chainId: 31337
    eip1559: true
    zeroBaseFee: true
    consensus:
      algorithm: qbft
      blockperiodseconds: 12
      epochlength: 32
      requesttimeoutseconds: 24
  gasPrice: "0x0"
  baseFeePerGas: "0x0"
  nonce: "0x0"
  difficulty: "0x1"
  mixHash: "0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365"
  timestamp: "0x0"
  coinbase: "0x0000000000000000000000000000000000000000"
  gasLimit: "0x1c9c380"
  extraData: ""

persistence:
  enabled: false
  accessModes: ["ReadWriteOnce"]
  storageClassName: ""
  size: 1Gi
